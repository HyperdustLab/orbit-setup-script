version: '3.9'
services:
  redis_db:
    extends:
      file: ./docker-compose/services/redis.yml
      service: redis_db

  db-init:
    extends:
      file: ./docker-compose/services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./docker-compose/services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis_db
    extends:
      file: ./docker-compose/services/backend.yml
      service: backend
    links:
      - db:database
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: http://nitro:8449/
      ETHEREUM_JSONRPC_TRACE_URL: http://nitro:8449/
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'

  visualizer:
    extends:
      file: ./docker-compose/services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./docker-compose/services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./docker-compose/services/frontend.yml
      service: frontend
  stats-db-init:
    extends:
      file: ./docker-compose/services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./docker-compose/services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./docker-compose/services/stats.yml
      service: stats

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./docker-compose/services/nginx.yml
      service: proxy
    environment:
      - SERVER_NAME=172.31.34.30
  nitro:
    image: offchainlabs/nitro-node:v2.3.3-6a1c1a7
    ports:
      - '8449:8449'
      - '8548:8548'
      - '9642:9642'
    volumes:
      - './config:/home/user/.arbitrum'
    command: >
      --conf.file /home/user/.arbitrum/nodeConfig.json
      --ws.port=8548
      --ws.addr=0.0.0.0
      --ws.origins=*

  das-server:
    image: offchainlabs/nitro-node:v2.3.3-6a1c1a7
    entrypoint: ['/bin/bash', '/das-server.sh']
    volumes:
      - './config:/home/user/.arbitrum'
      - './das-server.sh:/das-server.sh'
      - './das-data:/home/user/das-data'
    ports:
      - '9876:9876'
      - '9877:9877'
  ipfs:
    image: ipfs/go-ipfs
    container_name: ipfs
    ports:
      - '4001:4001'
      - '5001:5001'
      - '8088:8080'
    volumes:
      - ./ipfs:/data/ipfs
    restart: unless-stopped
  ipfs-cluster:
    image: ipfs/ipfs-cluster:latest
    container_name: ipfs-cluster
    environment:
      CLUSTER_SECRET: '97ee1e307938526d13782f78289421f14b07501793c2072e30fb49378fe3dfba'
    volumes:
      - ./ipfs-cluster:/data/ipfs-cluster
      - ./ipfs-cluster.sh:/usr/local/bin/ipfs-cluster.sh
    ports:
      - '9094:9094'
      - '9096:9096'
    restart: unless-stopped
